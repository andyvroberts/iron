<Application x:Class="Arduous.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Arduous"
             StartupUri="MainWindow.xaml">
  <Application.Resources>
    <SolidColorBrush x:Key="WindowBrush" Color="#FF548028"/>
    <SolidColorBrush x:Key="WindowBrushDark" Color="#FF2F4716"/>
    <SolidColorBrush x:Key="ListItemAlt1" Color="#FFA5DCDC"/>
    <SolidColorBrush x:Key="ListItemAlt2" Color="#FF76BEC1"/>
    <SolidColorBrush x:Key="TextBrush" Color="White"/>
    <SolidColorBrush x:Key="UserInputBrush" Color="Black"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="#FF851010"/>

    <!-- BORDERS -->
    <Style TargetType="{x:Type Border}" x:Key="NoBorder">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- LABLES -->
    <Style TargetType="{x:Type Label}" x:Key="ControlLabel">
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontWeight" Value="Medium"/>
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="FontFamily" Value="Tahoma"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="CheckLabel">
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="9"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="CheckLabelInverse">
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="9"/>
      <Setter Property="Foreground" Value="{StaticResource WindowBrush}"/>
    </Style>

    <!-- BUTTONS -->
    <Style TargetType="{x:Type Button}" x:Key="ActionButton">
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="{StaticResource TextBrush}"/>
          <Setter Property="Foreground" Value="{StaticResource WindowBrushDark}"/>
          <Setter Property="Cursor" Value="Hand"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="NavButton">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border BorderBrush="Transparent" Background="Transparent"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Cursor" Value="Hand"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- TEXTBOX -->
    <Style TargetType="{x:Type TextBox}" x:Key="InputText">
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Foreground" Value="{StaticResource UserInputBrush}"/>
      <Setter Property="FontFamily" Value="Baskerville"/>
      <Setter Property="FontSize" Value="11"/>
    </Style>
    
    <!-- TEXTBLOCKS -->
    <Style TargetType="{x:Type TextBlock}" x:Key="StatusBlock">
      <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="9"/>
    </Style>

    <!-- CHECKBOXES -->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckList">
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="10"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckListInverse">
      <Setter Property="FontFamily" Value="Tahoma"/>
      <Setter Property="FontSize" Value="10"/>
      <Setter Property="Foreground" Value="{StaticResource WindowBrush}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckListSpecial">
      <Setter Property="FontFamily" Value="Verdana"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontSize" Value="10"/>
      <Setter Property="Opacity" Value="0.6"/>
    </Style>
    
    <!-- STATUSBARS -->
    <Style TargetType="{x:Type StatusBar}" x:Key="StatusView">
      <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
    </Style>
    
    <!-- VIEWBOX -->
    <Style TargetType="{x:Type Viewbox}" x:Key="ClickViewbox">
      <Setter Property="IsHitTestVisible" Value="True"/>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Cursor" Value="Hand"/>
        </Trigger>
      </Style.Triggers>
    </Style>


    <!-- LISTVIEWS -->
    <Style TargetType="{x:Type ListView}" x:Key="StandardList">
      <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" x:Key="StandardListItem">
      <Setter Property="Margin" Value="0"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListViewItem">
            <Border Name="Border" 
                    Padding="2" 
                    SnapsToDevicePixels="true" 
                    Background="{TemplateBinding Background}">
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Border"
                        Property="Background" Value="{StaticResource TextBrush}"/>
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
          <Setter Property="Background" Value="{StaticResource ListItemAlt1}"/>
        </Trigger>
        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
          <Setter Property="Background" Value="{StaticResource ListItemAlt2}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    
    
    
    <!-- SCROLLBAR -->
    <SolidColorBrush x:Key="standardScrollBarFill" Color="Black"/>

    <!-- Style and templates for a default application wide scroll bar style [property=OverridesDefaultStyle] and 
         no x:key is given.  The scroll bar has this hierarchy of components: 
         Repeat Button/ (outside of track) - excluded from this style.
           track
             repeat button/
             thumb/
             repeat button/
           track/ 
         Repeat Button/ (outside of track) - excluded from this style.
  -->
    <!-- Track repeat button style -->
    <Style x:Key="scrollbarTrackRepeatButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="Transparent"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- Track thumb style -->
    <Style x:Key="scrollbarTrackThumb" TargetType="{x:Type Thumb}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Grid>
              <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         Fill="Transparent"/>
              <Border Name="Border" Background="{StaticResource standardScrollBarFill}" CornerRadius="5" 
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      Margin="0,1,0,1"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsDragging" Value="True">
                <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource standardScrollBarFill}"/>
                <Setter TargetName="Border" Property="Width" Value="Auto"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- container vertical scroll bar template that holds the components defined in the styles above -->
    <ControlTemplate x:Key="scrollbarVerticalApp" TargetType="{x:Type ScrollBar}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Track Name="PART_Track"
             Grid.Row="0" 
             IsDirectionReversed="True">
          <Track.DecreaseRepeatButton>
            <RepeatButton Style="{StaticResource scrollbarTrackRepeatButton}" 
                        Command="ScrollBar.PageUpCommand"/>
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource scrollbarTrackThumb}" />
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton Style="{StaticResource scrollbarTrackRepeatButton}"
                        Command="ScrollBar.PageDownCommand"/>
          </Track.IncreaseRepeatButton>
        </Track>
      </Grid>
    </ControlTemplate>
    <!-- container horizontal scroll bar template that holds the components defined in the styles above -->
    <ControlTemplate x:Key="scrollbarHorizontalApp" TargetType="{x:Type ScrollBar}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Track Name="PART_Track"
             Grid.Row="0" 
             IsDirectionReversed="False">
          <Track.DecreaseRepeatButton>
            <RepeatButton Style="{StaticResource scrollbarTrackRepeatButton}" 
                        Command="ScrollBar.PageUpCommand"/>
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource scrollbarTrackThumb}"/>
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton Style="{StaticResource scrollbarTrackRepeatButton}"
                        Command="ScrollBar.PageDownCommand"/>
          </Track.IncreaseRepeatButton>
        </Track>
      </Grid>
    </ControlTemplate>
    <!--The actual scrollbar style used as default -->
    <Style TargetType="ScrollBar">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
      <Style.Triggers>
        <Trigger Property="Orientation" Value="Vertical">
          <Setter Property="Width" Value="7"/>
          <Setter Property="Height" Value="AUTO"/>
          <Setter Property="Template" Value="{StaticResource scrollbarVerticalApp}"/>
        </Trigger>
        <Trigger Property="Orientation" Value="Horizontal">
          <Setter Property="Width" Value="AUTO"/>
          <Setter Property="Height" Value="7"/>
          <Setter Property="Template" Value="{StaticResource scrollbarHorizontalApp}"/>
        </Trigger>
      </Style.Triggers>
    </Style>

  </Application.Resources>
</Application>
